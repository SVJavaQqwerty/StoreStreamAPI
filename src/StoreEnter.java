import dataSources.comporators.PriceComporator;
import dataSources.predicates.PredicateProductAvailable;
import services.ServiceProduct;
import services.ServiceProductImpl;

public class StoreEnter {
    public static void main(String[] args) {
//        КОНСОЛЬНЫЙ МАГАЗИН Цель создания проекта
//        Закрепить знания по Основным структурам данных. Познакомиться с базовыми принципами организации кода в проекте
//
//        Общая задача создания проекта
//        Создать виртуальный магазин, с которым можно взаимодействовать через консольный ввод/вывод.
//
//                фичи магазина: - просмотр каталога - добавление в корзину по id - сколько штук - просмотр корзины - оформить заказ
//
//        1. Реализовать в проекте пагинацию для того, чтобы каждая категория товара
//           была в соответствующем каталоге (реализуйте не менее 3-х категорий)
//        2. Реализовать сортировку товаров по цене, фильтрацию относительно
//           доступности товара в текущий момент для заказа
//        3. Реализовать навигационное меню состоящее из:
//          ● Каталог
//          ● Корзина
//          ● Оформление заказа
//          ● Назад


        // Проверку пользователя сделал иначе чем описано в письме. Пробовал(в рамках views) не получилось. Было бы
        // примерно как сделал выбор категорий (отдельное представление и обработка ввода\вывода)...
        // Интересный аспект в новигации по магазину, вернуться нормально на предыдущее меню без прохода всех вызванных
        // методов в этой структуре очевидно нельзя, докучает)))
        // Так же доработал автоматическо отключение доступности при нулевом остатке продукта.
        ViewBuilder view = new ViewBuilder();

        view.starter();




    }
}